/**
 * 
Exercice : Gestion d'un Parc d'Attractions üé¢

Tu dois simuler la gestion des attractions d'un parc, avec des visiteurs qui peuvent acheter des tickets et profiter des attractions.
Les objectifs :

    Cr√©er une classe Attraction :
        Chaque attraction doit avoir :
            Un nom (string).
            Une capacit√© maximale (number).
            Un nombre actuel de visiteurs (number, initialis√© √† 0).
            Une popularit√© (number entre 1 et 5).
        M√©thodes :
            ajouterVisiteurs(nombre): Ajoute des visiteurs √† l'attraction si la capacit√© maximale n'est pas d√©pass√©e. Sinon, affiche : "Attraction pleine !".
            retirerVisiteurs(nombre): Retire un certain nombre de visiteurs (minimum 0).

    Cr√©er une classe Parc :
        Le parc doit avoir :
            Un nom (string).
            Une liste d'attractions (array d'instances de Attraction).
            Un revenu total (number, initialis√© √† 0).
        M√©thodes :
            ajouterAttraction(attraction): Ajoute une attraction au parc.
            afficherAttractions(): Affiche dans la console la liste des attractions, avec leurs noms et popularit√©s.
            vendreTicket(attractionNom, nombreDeVisiteurs, prixTicket):
                Trouve l'attraction par son nom.
                Ajoute les visiteurs √† l'attraction si possible.
                Augmente le revenu total du parc (nombreDeVisiteurs * prixTicket).
                Si l'attraction est pleine, affiche : "Impossible d'ajouter les visiteurs, attraction pleine.".

Les contraintes :

    Une attraction ne peut jamais d√©passer sa capacit√© maximale.
    Les visiteurs ne peuvent pas √™tre n√©gatifs (ni ajout√©s ni retir√©s).
    Si tu tentes d'ajouter une attraction avec un nom d√©j√† existant dans le parc, affiche un message : "Cette attraction existe d√©j√†.".
*/

